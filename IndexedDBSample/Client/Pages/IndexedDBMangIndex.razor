@page "/indexeddb/index"
@inject IJSRuntime JS

<h3>IndexedDB 管理</h3>

<nav class="navbar navbar-expand-lg bg-body-tertiary">
    <div class="container-fluid">
        <a class="navbar-brand" href="#">控制項</a>
        <button class="navbar-toggler" type="button" data-bs-toggle="collapse" data-bs-target="#navbarSupportedContent" aria-controls="navbarSupportedContent" aria-expanded="false" aria-label="Toggle navigation">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse" id="navbarSupportedContent">
            <ul class="navbar-nav me-auto mb-2 mb-lg-0">
                <li class="nav-item">
                    <a class="nav-link active" aria-current="page" role="button" @onclick=@ListAllDatabases>讀取DB清單</a>
                </li>
                <li class="nav-item">
                    <a class="nav-link" href="#">Link</a>
                </li>
                <li class="nav-item dropdown">
                    <a class="nav-link dropdown-toggle" href="#" role="button" data-bs-toggle="dropdown" aria-expanded="false">
                        Dropdown
                    </a>
                    <ul class="dropdown-menu">
                        <li><a class="dropdown-item" href="#">Action</a></li>
                        <li><a class="dropdown-item" href="#">Another action</a></li>
                        <li><hr class="dropdown-divider"></li>
                        <li><a class="dropdown-item" href="#">Something else here</a></li>
                    </ul>
                </li>
                <li class="nav-item">
                    <a class="nav-link disabled" aria-disabled="true">Disabled</a>
                </li>
            </ul>
            <form class="d-flex" role="search">
                <input class="form-control me-2" type="search" placeholder="Search" aria-label="Search">
                <button class="btn btn-outline-success" type="submit">Search</button>
            </form>
        </div>
    </div>
</nav>

<div class="row">
    <div class="col-2">
        <div class="card">
            <div class="card-header d-flex justify-content-between">
                <h4 class="card-title">Databases</h4>
                <div class="card-toolbar">
                    <button type="button" class="btn btn-sm btn-light" @onclick=@ListAllDatabases>
                        Load
                    </button>
                </div>
            </div>
            <div class="card-body " style="height:500px; position:relative; overflow:auto; ">
                <div class="list-group">
                    @foreach (var db in databases)
                    {
                        <a class="list-group-item list-group-item-action @(openDBName == db ? "active" : "") " role="button" @onclick=@(()=>ListStores(db))>@db</a>
                    }
                </div>
            </div>
            <div class="card-footer">
                <div class="mb-3">
                    <label for="createDBName" class="form-label">DB Name</label>
                    <input type="text" class="form-control" id="createDBName" placeholder="Enter DB Name" @bind-value=@newDbName />
                    <button class="btn btn-sm btn-primary" @onclick=@CreateDatabase>Create DB</button>
                </div>
                @if (message != "")
                {
                    <div class="alert alert-primary" role="alert">
                        @(message)
                    </div>
                }
            </div>
        </div>
    </div>
    <div class="col-2">
        <h4 class="border-bottom">Sotres</h4>
        <div class="list-group">
            @foreach (var sotre in sotres)
            {
                <a class="list-group-item list-group-item-action @(openStoreName == sotre ? "active" : "") " role="button" @onclick=@(()=>ListData(sotre))>@sotre</a>
            }
        </div>
    </div>
    <div class="col-8">

        @if (openDBName != "")
        {
            <div class="row g-3 align-items-center mb-10">
                <div class="col-2">
                    <label for="storeName" class="col-form-label">Store Name</label>
                </div>
                <div class="col-auto">
                    <input type="text" id="storeName" class="form-control" aria-describedby="StoreName" @bind-value=@newStoreName />
                </div>
                <div class="col-auto">
                    <button class="btn btn-primary" @onclick=@CreateStore>Create Store</button>
                </div>
            </div>
        }


    </div>
</div>

@code {
    private List<string> databases = new();
    private string openDBName = "";
    private Dictionary<string, List<string>> storeNames = new();
    private List<string> sotres = new();
    private string openStoreName = "";

    private async Task ListAllDatabases()
    {
        databases = await JS.InvokeAsync<List<string>>("indexedDBHelper.listDatabases");
    }

    private async Task ListStores(string dbName)
    {
        if (openDBName != dbName)
        {
            openDBName = dbName;
            var stores = await JS.InvokeAsync<List<string>>("indexedDBHelper.listStores", dbName);
            storeNames[dbName] = stores;
            sotres = storeNames[dbName];
        }
        else
        {
            openDBName = "";
            sotres = new();
        }
    }

    private async Task ListData(string storeName)
    {
        if (openStoreName != storeName)
        {
            openStoreName = storeName;
        }
        else
        {
            openStoreName = "";
        }
    }

    string newDbName { get; set; }
    string newStoreName { get; set; }
    string newStoreKeyPath = "id";
    string message = "";
    private async Task CreateDatabase()
    {
        message = await JS.InvokeAsync<string>("indexedDBHelper.createDatabase", newDbName);
    }

    private async Task CreateStore()
    {
        message = await JS.InvokeAsync<string>("indexedDBHelper.createStore", openDBName, newStoreName, newStoreKeyPath);
    }
}
